const userProfile = {
  id: "abc",
  name: "Fill Murray",
  email: "fill@murray.com",
  image: "https://source.boringavatars.com/marble",
}

export const getUserAndAccountArgs = {
  profile: {
    login: "fmurray",
    id: 7415983,
    node_id: "aDn61Xa3cjk0MT05gDQ=",
    gravatar_id: "",
    type: "User",
    site_admin: false,
    name: "Fill Murray",
    company: null,
    email: "fill@murray.com",
    hireable: null,
    bio: "CEO of HTMX",
    twitter_username: "",
    public_repos: 146,
    public_gists: 39,
    followers: 314,
    following: 86,
    created_at: "2014-04-26T19:35:49Z",
    updated_at: "2024-01-27T20:46:58Z",
    private_gists: 19,
    total_private_repos: 20,
    owned_private_repos: 20,
    disk_usage: 768655,
    collaborators: 6,
    two_factor_authentication: true,
    plan: {
      name: "free",
      space: 976562499,
      collaborators: 0,
      private_repos: 10000,
    },
  },
  provider: {
    id: "github",
    name: "GitHub",
    type: "oauth" as const,
    authorization: {
      url: new URL("https://google.com"),
      request: undefined,
      conform: undefined,
    },
    token: { url: new URL("https://google.com") },
    userinfo: {
      url: new URL("https://google.com"),
      // request: async () => {},
      conform: undefined,
    },
    profile: () => userProfile,
    style: { logo: "/github.svg", bg: "#24292f", text: "#fff" },
    clientId: "abc",
    clientSecret: "abc",
    signinUrl: "http://localhost:3000/api/auth/signin/github",
    callbackUrl: "http://localhost:3000/api/auth/callback/github",
    redirectProxyUrl: undefined,
    checks: ["pkce" as const],
    account: () => {},
  },
  tokens: {
    access_token: "gho_abc",
    token_type: "bearer" as const,
    scope: "read:user,user:email",
  },
  logger: {
    error: (error: Error) => console.error(error),
    warn: (error: string) => console.warn(error),
    debug: (error: string) => console.debug(error),
  },
}
